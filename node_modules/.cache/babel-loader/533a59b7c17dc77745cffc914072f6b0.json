{"ast":null,"code":"import { LOGIN, LOGOUT } from \"./types/auth\"; // Action Creators\n\nexport function login(token, user) {\n  return {\n    type: LOGIN,\n    payload: {\n      token,\n      user\n    }\n  };\n}\nexport function logout() {\n  return {\n    type: LOGOUT\n  };\n} // Reducer\n\nconst initialState = {\n  isLoggedIn: false,\n  token: null,\n  user: null\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state,\n        isLoggedIn: true,\n        token: action.payload.token,\n        user: action.payload.user\n      };\n\n    case LOGOUT:\n      return { ...state,\n        isLoggedIn: false,\n        token: null,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ori-dev/Documents/TestProjest/react-redux/react-redux-login/fontend-react/src/reducers/authReducer.ts"],"names":["LOGIN","LOGOUT","login","token","user","type","payload","logout","initialState","isLoggedIn","reducer","state","action"],"mappings":"AAAA,SAEEA,KAFF,EAGEC,MAHF,QAQO,cARP,C,CAUA;;AACA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAA8BC,IAA9B,EAAuD;AAC5D,SAAO;AACLC,IAAAA,IAAI,EAAEL,KADD;AAELM,IAAAA,OAAO,EAAE;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAFJ,GAAP;AAID;AAED,OAAO,SAASG,MAAT,GAAgC;AACrC,SAAO;AACLF,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,C,CAED;;AACA,MAAMO,YAAuB,GAAG;AAC9BC,EAAAA,UAAU,EAAE,KADkB;AAE9BN,EAAAA,KAAK,EAAE,IAFuB;AAG9BC,EAAAA,IAAI,EAAE;AAHwB,CAAhC;AAMA,eAAe,SAASM,OAAT,CAAiBC,KAAK,GAAGH,YAAzB,EAAuCI,MAAvC,EAAgE;AAC7E,UAAQA,MAAM,CAACP,IAAf;AACE,SAAKL,KAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,UAAU,EAAE,IAFP;AAGLN,QAAAA,KAAK,EAAES,MAAM,CAACN,OAAP,CAAeH,KAHjB;AAILC,QAAAA,IAAI,EAAEQ,MAAM,CAACN,OAAP,CAAeF;AAJhB,OAAP;;AAMF,SAAKH,MAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLN,QAAAA,KAAK,EAAE,IAHF;AAILC,QAAAA,IAAI,EAAE;AAJD,OAAP;;AAMF;AACE,aAAOO,KAAP;AAhBJ;AAkBD","sourcesContent":["import {\n  AuthActionTypes,\n  LOGIN,\n  LOGOUT,\n  LoginAction,\n  LogoutAction,\n  AuthState,\n  User,\n} from \"./types/auth\";\n\n// Action Creators\nexport function login(token: string, user: User): LoginAction {\n  return {\n    type: LOGIN,\n    payload: { token, user },\n  };\n}\n\nexport function logout(): LogoutAction {\n  return {\n    type: LOGOUT,\n  };\n}\n\n// Reducer\nconst initialState: AuthState = {\n  isLoggedIn: false,\n  token: null,\n  user: null,\n};\n\nexport default function reducer(state = initialState, action: AuthActionTypes) {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        isLoggedIn: true,\n        token: action.payload.token,\n        user: action.payload.user,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        token: null,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}