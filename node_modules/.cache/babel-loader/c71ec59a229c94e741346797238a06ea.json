{"ast":null,"code":"import { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { currentUrl } from \"./mainUrl\";\nimport store from \"../store\";\nconst uri = `${currentUrl}/graphql`;\nconst httpLink = createHttpLink({\n  uri,\n  fetch\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  // Get token from localStorage\n  const {\n    user\n  } = store.getState();\n  const token = user.token || null;\n  return {\n    headers: { ...headers,\n      \"x-token\": token\n    }\n  };\n});\nexport default new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});","map":{"version":3,"sources":["/Users/ori-dev/Documents/TestProjest/react-redux/react-redux-login/fontend-react/src/config/client.ts"],"names":["ApolloClient","createHttpLink","setContext","InMemoryCache","currentUrl","store","uri","httpLink","fetch","authLink","_","headers","user","getState","token","link","concat","cache"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,GAAG,GAAI,GAAEF,UAAW,UAA1B;AAEA,MAAMG,QAAQ,GAAGN,cAAc,CAAC;AAAEK,EAAAA,GAAF;AAAOE,EAAAA;AAAP,CAAD,CAA/B;AACA,MAAMC,QAAQ,GAAGP,UAAU,CAAC,CAACQ,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWP,KAAK,CAACQ,QAAN,EAAjB;AACA,QAAMC,KAAK,GAAGF,IAAI,CAACE,KAAL,IAAc,IAA5B;AACA,SAAO;AACLH,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEP,iBAAWG;AAFJ;AADJ,GAAP;AAMD,CAV0B,CAA3B;AAYA,eAAe,IAAId,YAAJ,CAAiB;AAC9Be,EAAAA,IAAI,EAAEN,QAAQ,CAACO,MAAT,CAAgBT,QAAhB,CADwB;AAE9BU,EAAAA,KAAK,EAAE,IAAId,aAAJ;AAFuB,CAAjB,CAAf","sourcesContent":["import { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { currentUrl } from \"./mainUrl\";\nimport store from \"../store\";\n\nconst uri = `${currentUrl}/graphql`;\n\nconst httpLink = createHttpLink({ uri, fetch });\nconst authLink = setContext((_, { headers }) => {\n  // Get token from localStorage\n  const { user } = store.getState();\n  const token = user.token || null;\n  return {\n    headers: {\n      ...headers,\n      \"x-token\": token,\n    },\n  };\n});\n\nexport default new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n"]},"metadata":{},"sourceType":"module"}